# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Esky\Application\:
        resource: '../src/Esky/Application/*'
        exclude: '../src/Esky/Application/{DependencyInjection,Entity,Migrations,Tests,Model,Parameters}'

    Esky\Application\Model\DTO\:
        resource: '../src/Esky/Application/Model/DTO'

#    Esky\Domain\:
#        resource: '../src/Esky/Domain/*'
#        exclude: '../src/Esky/Domain/{DependencyInjection,Entity,Migrations,Tests,Model,Parameters}'
#
    Esky\Infrastructure\:
        resource: '../src/Esky/Infrastructure/*'
        exclude: '../src/Esky/Infrastructure/{DependencyInjection,Entity,Migrations,Tests,Model,Parameters}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Esky\Application\Controller\:
        resource: '../src/Esky/Application/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Esky\Application\Controller\Page\DocumentationController:
        arguments:
            - '%api.title%'
        tags: ['controller.service_arguments']

    Symfony\Component\Yaml\Parser:

    Esky\Application\ParamConverter\RequestQueryParamConverter:
        public: true
        class: Esky\Application\ParamConverter\RequestQueryParamConverter
        tags:
            - { name: request.param_converter, priority: -10, converter: esky.request_query }

    Esky\Infrastructure\WeatherDBI\Factory\GuzzleClientFactory:
        public: false
        arguments:
            - '%weatherdbi.base_url%'

    Esky\Infrastructure\WeatherDBI\Client\GuzzleClient:
        factory: [ '@Esky\Infrastructure\WeatherDBI\Factory\GuzzleClientFactory', 'create']

    Esky\Infrastructure\WeatherDBI\Repository\WeatherRepositoryInterface:
        alias: Esky\Infrastructure\WeatherDBI\Repository\WeatherRepository

    Esky\Infrastructure\WeatherDBI\Processors\DirectionScoreProcessorInterface:
        factory: [
            '@Esky\Infrastructure\WeatherDBI\Factory\DirectionScoreProcessorFactory',
            'create'
        ]

    Esky\Infrastructure\WeatherDBI\Handler\ResultHandlerInterface:
        factory: [
            '@Esky\Infrastructure\WeatherDBI\Factory\DirectionResultHandlerFactory',
            'create'
        ]
